[
    {
        "version": {
            "major": 1,
            "minor": 1,
            "patch": 0,
            "timestamp": "2020-09-08T11:30:00.000000+00:00"
        }
    },
    {
        "brief": "Run a script file.", 
        "names": [
            "/run"
        ], 
        "details": "Loads a SSE Console log file or any other plain text file and starts executing each line. There is a tunable interval, in \"Settings\", upon which the commands will be executed. The parameter needs a .log or .txt file extension appended (e.g. \"/run default.log\"). Same as pressing \"Run\".\n\nNote: You can run in endless loop if you run a script which run itself! Use \"run-enough\" to stop that.", 
        "params": "<file name>"
    }, 
    {
        "brief": "Stop the running script.", 
        "names": [
            "/run-enough"
        ], 
        "details": "This will stop any currently running script. The queue of commands will be cleared and the timer at which the commands executed, stopped. Use to escape long running tasks or endless loops of scripts which call upon themselves.", 
        "params": ""
    }, 
    {
        "brief": "Copy the Log to Clipboard.", 
        "names": [
            "/copy"
        ], 
        "details": "Copy the current content in the Log window into the Windows Clipboard. Same as pressing \"Log\" -> \"Copy\".", 
        "params": ""
    }, 
    {
        "brief": "Load a log file.", 
        "names": [
            "/load"
        ], 
        "details": "Loads a SSE Console log file into the current Log window, replacing its content. The parameter needs not the .log extension (e.g. \"/load default\"). Same as pressing \"Log\" -> \"Load\".", 
        "params": "<file name>"
    }, 
    {
        "brief": "Save a log file.", 
        "names": [
            "/save"
        ], 
        "details": "Takes the current Log window content and saves it as a file. Filters are ignored. The parameter passed needs not the .log extension (e.g. \"/save default\"). Same as pressing \"Log\" -> \"Save\".", 
        "params": "<file name>"
    }, 
    {
        "brief": "Clears the Log.", 
        "names": [
            "/clear"
        ], 
        "details": "Clears the whole Log window content, restarts the I/O counters. Same as pressing \"Log\" -> \"Clear\".", 
        "params": ""
    }, 
    {
        "brief": "Filters the Log.", 
        "names": [
            "/filter"
        ], 
        "details": "Applies the passed text as filter to the Log window content. Same as typing in \"Main window\" -> \"Filter\".", 
        "params": "<text>"
    }, 
    {
        "brief": "Filters the Help: Skyrim.", 
        "names": [
            "/filter-sse"
        ], 
        "details": "Applies the passed text as filter to the Help: Skyrim commands window content. Same as typing in \"Help\" -> \"Skyrim\" -> \"Filter\".", 
        "params": "<text>"
    }, 
    {
        "brief": "Filters the Help: GUI.", 
        "names": [
            "/filter-gui"
        ], 
        "details": "Applies the passed text as filter to the Help: GUI commands window content. Same as typing in \"Help\" -> \"GUI\" -> \"Filter\".", 
        "params": "<text>"
    }, 
    {
        "brief": "Filters the Help: Alias.", 
        "names": [
            "/filter-alias"
        ], 
        "details": "Applies the passed text as filter to the Help: Alias commands window content. Same as typing in \"Help\" -> \"Alias\" -> \"Filter\".", 
        "params": "<text>"
    }, 
    {
        "brief": "Creates an alias.", 
        "names": [
            "/alias"
        ], 
        "details": "Provides an way to short type more complex parameterized Skyrim commands. For example, \"/alias flames player.equipspell 12fcd left\" (equip Flames to player's left hand) will allow you to type in the console: \".flames\" (you may use auto-complete) instead of the whole command.\n\nPositional arguments are also allowed: \"/alias cow cow tamriel <cell-x>,<cell-y>\" will allow you to type in the console from now on something like \".cow 4 -4\" so you are teleported to Whiterun.\n\nNote how all alias commands start with the dot '.' symbol when typed in the console.\n\nWhite space is used as argument separator, therefore you can't pass arguments with spaces inside.", 
        "params": "<name> <command>"
    },
    {
        "brief": "Deletes an alias.", 
        "names": [
            "/alias-delete"
        ], 
        "details": "Deletes a previously created alias.", 
        "params": "<name>"
    }, 
    {
        "brief": "Launch an asynchronous process.", 
        "names": [
            "/async"
        ], 
        "details": "Create a minimized, not-activated process with its standard and error outputs redirected to a specific file. Which application and with what arguments is created depend on the parameter, e.g.: \"/alias python -c \"print (hex (0xcafe * 2))\"\".\n\nSee \"/async-read\" about the captured output.", 
        "params": "<command line>"
    }, 
    {
        "brief": "See the captured output of \"/async\".", 
        "names": [
            "/async-read"
        ], 
        "details": "Reads and prints the file which is capturing the output of \"/async\". Depending on how long lived was, or is still living, the launched process, the content might update any time, hence it depends at which point of the time this command is invoked and how many times.", 
        "params": ""
    } 
]
